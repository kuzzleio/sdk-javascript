name: Push to dev branch

on:
  push:
    branches:
      - 7-dev

env:
  NODE_LTS_MAINTENANCE_VERSION: "lts/fermium"
  NODE_LTS_CURRENT_VERSION: "lts/gallium"
  NODE_LTS_ACTIVE_VERSION: "lts/*"  # The latest LTS version

jobs:
  prepare-matrix:
    name: Forge Node LTS Matrix
    runs-on: ubuntu-latest
    steps:
      - id: set-matrix
        run: |
          echo "::set-output name=matrix::{\"node-version\": [\"$NODE_LTS_MAINTENANCE_VERSION\", \"$NODE_LTS_CURRENT_VERSION\", \"$NODE_LTS_ACTIVE_VERSION\"]}"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
  
  lint:
    name: Lint
    runs-on: ubuntu-18.04
    needs: [prepare-matrix]
    strategy:
      matrix:
        node-version: ${{ fromJson(needs.prepare-matrix.outputs.matrix).node-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/es-lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-18.04
    needs: [lint, prepare-matrix]
    strategy:
      matrix:
        node-version: ${{ fromJson(needs.prepare-matrix.outputs.matrix).node-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/unit-tests

  functional-tests:
    name: Functional Tests
    runs-on: ubuntu-18.04
    needs: [unit-tests, prepare-matrix]
    strategy:
      matrix:
        node-version: ${{ fromJson(needs.prepare-matrix.outputs.matrix).node-version }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/functional-tests
        with:
          CYPRESS_RECORD_KEY_DOC: ${{ secrets.CYPRESS_RECORD_KEY_DOC }}

  admin-console-tests:
    name: Admin Console Tests
    runs-on: ubuntu-18.04
    needs: [unit-tests, prepare-matrix]
    strategy:
      matrix:
        node-version: ${{ fromJson(needs.prepare-matrix.outputs.matrix).node-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/tests-ac
        with:
          sdk-version: 7
          cypress-key: ${{ secrets.CYPRESS_RECORD_KEY }}

  documentation-snippet-tests:
    name: Documentation Snippet Tests
    needs: [unit-tests]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_LTS_ACTIVE_VERSION }}
      - uses: ./.github/actions/snippet-tests
        with:
          CYPRESS_RECORD_KEY_DOC: ${{ secrets.CYPRESS_RECORD_KEY_DOC }}

  documentation-staging:
    name: Deploy Docu to NEXT
    runs-on: ubuntu-18.04
    needs: [functional-tests, admin-console-tests, documentation-snippet-tests]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Extract references from context
        shell: bash
        id: extract-refs
        run: |
          echo "::set-output name=version::$(git describe --abbrev=0 --tags | cut -d. -f 1)"
          echo "::set-output name=repo::$(echo $GITHUB_REPOSITORY | cut -d/ -f 2)"
          echo "::set-output name=branch::$(echo $GITHUB_REF | cut -d/ -f 3)"
      - uses: convictional/trigger-workflow-and-wait@v1.3.0
        with:
          owner: kuzzleio
          repo: documentation
          github_token: ${{ secrets.ACCESS_TOKEN_CI }}
          workflow_file_name: child_repo.workflow.yml
          ref: develop
          inputs: '{"repo_name": "${{ steps.extract-refs.outputs.repo }}", "branch": "${{ steps.extract-refs.outputs.branch }}", "version": "${{ steps.extract-refs.outputs.version }}"}'
